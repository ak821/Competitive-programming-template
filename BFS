int n;
vector<vector<int>> adj;
vector<int> vis,p,d; // p Stores parent of node , d[i] is distance of ith node from source.

void bfs(int s){  // s is Source
    queue<int> q;
    vis.resize(n); p.resize(n); d.resize(n);
    q.push(s);
    vis[s] = true;
    p[s] = -1;
    while (!q.empty()) {
        int v = q.front();
        q.pop();
        for (int u : adj[v]) {
            if (!vis[u]) {
                vis[u] = true;
                q.push(u);
                d[u] = d[v] + 1;
                p[u] = v;
            }
        }
    }
}
